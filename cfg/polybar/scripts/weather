#!/bin/bash

# in order to use all the features of this script you need to sign up for an API key
# on https://www.weatherbit.io/account/create and then you need to verify your account

# you also need to sign up on https://home.openweathermap.org to get an API key 

## Weather data
KEY="7e6ed49a1a7b802ad1299faa3a5f008d"  # put your Opeanweather API key here
ID="169389" # put your city id here, it can be found on here https://openweathermap.org/find
UNIT="metric"	# Available options : 'metric' or 'imperial'
WBKEY="754802f8df8d48f999ae6a283c2a3801"  # put your WeatherBit API key here 
COUNTRY="Syria" # put your country name here 
CITY="Idlib" # put your city name here


## Collect data
cache_dir="$HOME/.cache/weather"
cache_weather_stat=${cache_dir}/weather-stat
cache_weather_degree=${cache_dir}/weather-degree
cache_weather_icon=${cache_dir}/weather-icon
cache_weather_rofi=${cache_dir}/weather-rofi

## Make cache dir
if [[ ! -d "$cache_dir" ]]; then
	mkdir -p ${cache_dir}
fi

## Get data
get_weather_data() {
	weather=`curl -sf "http://api.openweathermap.org/data/2.5/weather?APPID="$KEY"&id="$ID"&units="$UNIT""`
	altweather=`curl -X GET --header 'Accept: application/json' "https://api.weatherbit.io/v2.0/current?city="$CITY"&country="$COUNTRY"&key=754802f8df8d48f999ae6a283c2a3801"`
	echo ${weather}

	if [ ! -z "$weather" ]; then
		weather_temp=`echo "$weather" | jq ".main.temp" | cut -d "." -f 1`
		weather_icon_code=`echo "$weather" | jq -r ".weather[].icon" | head -1`
		weather_description=`echo "$weather" | jq -r ".weather[].description" | head -1 | sed -e "s/\b\(.\)/\u\1/g"`
		city=`echo "$weather" | jq -r ".name"` 
		humidity=`echo "$weather" | jq -r ".main.humidity"` 
		windspeed=`echo "$weather" | jq -r ".wind.speed"` 
		sunrise=`date -d @"$(echo "$weather" | jq -r ".sys.sunrise")" | cut -d ' ' -f4-6 | cut --complement -c 6-8 | cut -c 2-8`
		sunset=`date -d @"$(echo "$weather" | jq -r ".sys.sunset")" | cut -d ' ' -f4-6 | cut --complement -c 6-8 | cut -c 2-8` 
		uv=`echo "$altweather" | jq -r ".data[].uv" | cut -c 1-4`
		aqi=`echo "$altweather" | jq -r ".data[].aqi"`
		precipitation=`echo "$altweather" | jq -r ".data[].precip"`
		
		#Big long if statement of doom
		if [ "$weather_icon_code" == "50d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "50n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "01d"  ]; then
			weather_icon="盛 "
		elif [ "$weather_icon_code" == "01n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "02d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "02n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "03d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "03n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "04d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "04n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "09d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "09n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "10d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "10n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "11d"  ]; then
			weather_icon=""
		elif [ "$weather_icon_code" == "11n"  ]; then
			weather_icon=""
		elif [ "$weather_icon_code" == "13d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "13n"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "40d"  ]; then
			weather_icon=" "
		elif [ "$weather_icon_code" == "40n"  ]; then
			weather_icon=" "
		else 
			weather_icon=" "
		fi
		echo "$weather_icon" >  ${cache_weather_icon}
		echo "$weather_description" > ${cache_weather_stat}
		echo "$weather_temp""° " > ${cache_weather_degree}
		echo -e "City: $city \nHumidity: $humidity% \nUV Index: $uv \nPrecipitation: $precipitation% \nWindspeed: $windspeed m/s \nSunrise: $sunrise \nSunset: $sunset" > ${cache_weather_rofi}	
	else
		echo "Weather Unavailable" > ${cache_weather_stat}
		echo " " > ${cache_weather_icon}
		echo "-" > ${cache_weather_degree}
	fi
}

update(){
	get_weather_data &> /dev/null
	}

## Execute
if [[ "$1" == "--getdata" ]]; then
	get_weather_data
elif [[ "$1" == "--icon" ]]; then
	cat ${cache_weather_icon}
elif [[ "$1" == "--temp" ]]; then
	cat ${cache_weather_degree}
elif [[ "$1" == "--hex" ]]; then
	tail -F ${cache_weather_hex}
elif [[ "$1" == "--stat" ]]; then
	cat ${cache_weather_stat}
elif [[ "$1" == "--full" ]]; then
	get_weather_data &> /dev/null
	cat ${cache_weather_icon} ${cache_weather_degree} ${cache_weather_stat} | tr -d '\n'
fi
