####################################
#            _                     #
#     ____  (_)________  ____ ___  #
#    / __ \/ / ___/ __ \/ __ `__ \ #
#   / /_/ / / /__/ /_/ / / / / / / #
#  / .___/_/\___/\____/_/ /_/ /_/  #
# /_/                              #
####################################

###############################
#      General Settings       #
###############################

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = false

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
experimental-backends = true;
backend = "glx";

# Enable/disable VSync.
# vsync = false
vsync = true;

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# detect-transient = false
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if
# detect-transient is enabled, too.
#
# detect-client-leader = false
detect-client-leader = true;

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never
# practically happened) and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
#
glx-no-stencil = true;

# no-use-damage = false
use-damage = true;

# log-level = "debug"
log-level = "warn";

#
wintypes:
{
  tooltip = { fade=true; shadow=true; opacity=1.0; focus=true; full-shadow=false; };
  popup_menu = { opacity=1.0; }
  dropdown_menu = { opacity=1.0; }
  utility = { shadow=false; opacity=1.0; }
};

###############################
#   Transparency / Opacity    #
###############################

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
inactive-opacity = 1.0;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 1.0;

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.0;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
#inactive-dim = 1.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.

#opacity-rule = [
#"100:class_g    = 'code-oss'",
#"100:class_g    = 'firefox'",
#"90:class_g     = 'Thunar'",
#"90:class_g     = 'discord'",
#"90:class_g     = 'vesktop'",
#"90:class_g     = 'polybar'",
#"80:class_g     = 'Zathura'",
#"80:class_g     = 'obs'",
#"85:class_g     = 'Pavucontrol'",
#"90:class_g     = 'Geany'",
#"90:class_g     = 'Spotify'",
#"85:class_g     = 'dunst'",
#"90:class_g     = 'copyq'",
#"85:class_g     = 'Rhythmbox'",
#"85:class_g     = 'Trackma-gtk'",
#"95:class_g     = 'TelegramDesktop'",
#"90:class_g     = 'org.gnome.Nautilus'",
#"80:class_g     = 'stalonetray'",
#"85:class_g     ?= 'Dmenu'",
#];

###############################
#     Background-Blurring     #
###############################

# Blur background of windows.
#
blur-background = true;

# Parameters for background blurring, see the *BLUR* section for more information.
blur-method = "dual_kawase";
#
blur-size = 2;
#
# blur-deviation = false
#
blur-strength = 5;

# Blur kernel preset. Play around and see what looks best.
# Options "3x3box", "5x5box", "7x7box", "3x3gaussian", "5x5gaussian", "7x7gaussian", "9x9gaussian", "11x11gaussian"
#
# blur-kern = "3x3box";

# Toggle whether you want to use a blacklist or whitelist.
# Defaults to "true"
blur-whitelist = true;

# Whitelist for windows to have background blurring
blur-include = [
  "class_g = 'Alacritty'",
  "class_g = 'kitty'"
];

# Blacklist for background blurring. 
# Only works if "blur-whitelist = false;"
#
# blur-exclude = [
#   "class_g = 'Firefox'"
# ];

# Exclude conditions for background blur.
blur-background-exclude = [
#	"window_type = 'dock'",
	"window_type = 'desktop'",
	"class_g = 'Plank'",
	"class_g = 'eww-background-closer'",
	"role   = 'xborder'",
	"class_g = 'slop'",
	"_GTK_FRAME_EXTENTS@:c"
];

###############################
#            Corners          #
###############################

corner-radius = 12;
#rounded-corners-exclude = [
#	"class_g ?= 'polybar'",
#	"class_g ?= 'Dmenu'",
#];

round-borders = 30;
round-borders-exclude = [
	"class_g = 'TelegramDesktop'"
];

# Specify a list of border width rules, in the format `PIXELS:PATTERN`, 
# Note we don't make any guarantee about possible conflicts with the
# border_width set by the window manager.
#
# example:
#    round-borders-rule = [ "2:class_g = 'URxvt'" ];
#
round-borders-rule = [
	"2:class_g ?= 'URxvt'",
	"2:class_g ?= 'Alacritty'",
	"0:class_g ?= 'firefox'"
];

###############################
#            Shadows          #
###############################

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
shadow = true;
# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 15;
# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = 1
# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = -15;
# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = -15;
# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0
# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0
# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0
# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
# shadow-color = "#000000"
# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
	"class_g = 'Cairo-clock'",
	"class_g = 'CoverGloobus'",
	"class_g = 'Tilda'",
	"name ?= 'gnome-pie'",
#	"class_g = 'Dmenu'",
	"class_g ?= 'rofi'",
#	"class_g ?= 'polybar'",
    "class_g ?= 'Plank'",
    "name *= 'recordmydesktop'",
#    "name = 'Notification'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
#    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Xfce4-notifyd'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

###############################
#            Fading           #
###############################

# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
fade-delta = 5;

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
  "class_g = 'slop'",   # maim
  "WM_CLASS@:s *= 'i3lock'",
]

# Do not fade on window open/close.
no-fading-openclose = true

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
no-fading-destroyed-argb = true

#################################
#     		Animations    		#
#################################

animations = (
   {
    triggers = ["close", "hide"];
    opacity = {
       curve = "linear";
       duration = 0.11;
       start = "window-raw-opacity-before";
       end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
   },
   {
    triggers = ["open", "show"];
    opacity = {
       curve = "cubic-bezier(0,1,1,1)";
       duration = 0.3;
       start = 0;
       end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
       curve = "cubic-bezier(0,1.3,1,1)";
       duration = 0.3;
       start = 0.6;
       end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
   },
   {
    triggers = ["geometry"]
    scale-x = {
       curve = "cubic-bezier(0,0,0,1.28)";
       duration = 0.22;
       start = "window-width-before / window-width";
       end = 1;
    }
    scale-y = {
       curve = "cubic-bezier(0,0,0,1.28)";
       duration = 0.22;
       start = "window-height-before / window-height";
       end = 1;
    }
    offset-x = {
       curve = "cubic-bezier(0,0,0,1.28)";
       duration = 0.22;
       start = "window-x-before - window-x";
       end = 0;
    }
    offset-y = {
       curve = "cubic-bezier(0,0,0,1.28)";
       duration = 0.22;
       start = "window-y-before - window-y";
       end = 0;
    }
 
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
   }
)
