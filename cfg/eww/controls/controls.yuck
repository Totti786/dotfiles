(defvar cover-reveal true)
(defwidget header []
	(revealer
		:reveal cover-reveal
		:transition "slidedown"
		(box
			:class "datebox"
	        :orientation "h"
	        :space-evenly true
			(eventbox
				;;:onrightclick "${EWW_CMD} update cover-reveal=false && ${EWW_CMD} update todo=true"
				;;:onhoverlost "${EWW_CMD} update cover-reveal=true"
				:class "date-cover"
		        :halign "center"
		        :valign "center"
		        :style "background-image: url('.././wpg/templates/wallpaper.jpg')"
				(overlay
			        :orientation "v"
					(label
						:text "${time}"
						:class "time"
					)
					(label 
						:text "${day} - ${date} "
						:class "day"
						:valign "end"
						:halign "center"
					)
					(label
						:text music_listen
					)
				)
		    )
		)
	)
)

(defvar todo false)
(defwidget todo []
	(revealer
		:reveal todo
		:transition "slideup"
		(eventbox
			:onrightclick "${EWW_CMD} update todo=false && ${EWW_CMD} update cover-reveal=true"
			(box
				:orientation "v"
				:space-evenly false
	            :spacing 0
	            :class 'todobox'
				(box :class 'todo'
					(literal
						:content todo-cards
					)
				)
			)
		)
	)
)

(defvar battery true)
(defwidget footer []
	(box
		:class "datebox"
		:orientation "h"
		:space-evenly true
	    (eventbox
			:onhover "${EWW_CMD} update battery=true"
			:onhoverlost "${EWW_CMD} update battery=false"
			:onclick "./scripts/battery toggle"
			:class "useractions"
			:halign "start"
			:valign "center"
			(box
				(label 
					:class "button ${ battery_saver == 'On' ? 'active' : ''}"
					:text "${battery_icon}"
				)
			)
	    )
	    (box
			:class "useractions"
	        :space-evenly false
	        :orientation "h"
	        :halign "end"
	        :valign "start"
	        :spacing 5
			(button
				:class "button"
				:onclick "./scripts/apps lock"
				:onrightclick "eww reload"
				""
			)
			(button
				:class "button ${redshift_state == 'on' ? 'active' : ''}"
				:onclick "~/.local/bin/redshift.sh toggle"
				"ﯧ"
			)
			(button
				:class "button"
				:onclick "./scripts/apps settings"
				"漣"
			)
			(button
				:class "button"
				:onclick "./scripts/apps power"
				:onrightclick "./scripts/controls.sh"
				"⏻"
			)
	    )
	)
)

(defvar control-panel true)
(defwidget sysbuttons []
	(revealer
		:reveal control-panel
		:transition "slideup"
		(box
			:class "sysbuttonsbox"
			:orientation "v"
			:space-evenly true
			:spacing 8
			(box
				:class "block-container"
				:orientation "h"
				:space-evenly true
				:spacing 8
				(box
					:halign "start"
					:orientation "h"
					:space-evenly true
					(sysblock
				        :icon "${network_icon}"
				        :onclick "./scripts/apps wifi"
				        :onrightclick "./scripts/apps wifi"
				        :active "${network_status == 'Connected' ? true : false}"
				        :label "${network_ssid}"
					)
				)
			    (box
					:halign "end"
			        :orientation "h"
					:space-evenly true
			        (sysblock
						:icon "${bluetooth_state == 'on' ? '' : ''}"
						:onclick "./scripts/bluetooth toggle"
						:onrightclick "rofi-bluetooth --connect"
						:active "${bluetooth_state == 'on' ? true : false}"
						:label "Bluetooth"
			        )
			    )
			)
		    (box
				:class "block-container"
				:orientation "h"
				:space-evenly true
				(box
					:halign "start"
					:orientation "h"
					:space-evenly true
			        (sysblock
						:icon "${record_status == 'on' ? '󱣴' : '󰹑'}"
						:onclick "~/.config/openbox/pipemenus/record --toggle"
						:onrightclick "~/.config/openbox/pipemenus/record --toggle"
						:active "${record_status == 'on' ? true : false}"
						:label "Recorder"
			        )
				)
				(box
					:halign "end"
					:orientation "h"
					:space-evenly true
					(sysblock
						:icon "${dnd_status == 'On' ? '󰍶' : '󱑙'}"
						:onclick "./scripts/dnd toggle"
						:onrightclick "./scripts/dnd toggle"
						:active "${dnd_status == 'On' ? true : false}"
						:label "Don't Disturb"
					)
				)
		    )
			(box
				:class "block-container"
				:orientation "h"
				:space-evenly true
				(box
					:halign "start"
					:orientation "h"
					:space-evenly true
					(sysblock
						:icon "${timer == 'Timer' ? '' : ''}"
						:onclick "./scripts/timer.sh toggle"
						:onrightclick "./scripts/timer.sh toggle"
						:active "${timer == 'Timer' ? false : true}"
						:label timer
					)
				)
				(box
					:halign "end"
					:orientation "h"
					:space-evenly true
					(sysblock
						:icon "${vpn_status == 'On' ? '旅' : 'ﯳ'}"
						:onclick "./scripts/vpn.sh toggle"
						:onrightclick "./scripts/vpn.sh toggle"
						:active "${vpn_status == 'On' ? true : false}"
						:label "VPN"
					)
				)
			)
		)
	)
)

(defvar timer_reveal false)
(defwidget timer [] 
	(revealer
		:reveal timer_reveal
		:transition "slidedown"
		:duration "250ms"
		(box
			:class "timer_container"
			:orientation "h"
	        :space-evenly true
			(box
				:class "timer"
				(button
					:class "button"
					:onclick "./scripts/timer.sh stopwatch"
					"祥"
				)
	        )
	        (box
				:class "timer"	
				(button
					:class "button"
					:onclick "./scripts/timer.sh countdown"
					""
				)
			)
        )
    )
)

(defwidget sysblock [icon onclick onrightclick active label]
	(eventbox
		:class "block-container"
		(button
			:halign "center"
			:valign "center"
			:class "block ${active ? 'active' : ''}" 
			:onclick "${onclick}" 
			:onrightclick "${onrightclick}"
			(box
				:orientation "h"
				:spacing 1
				:valign "start"
				:space-evenly false
				(box
					:class "iconbox"
					:halign "start"
					:valign "center"
					:space-evenly true
					:orientation "h"
					(label
						:text "${icon}" 
						:class "icon"
					)
				)
				(box
					:class "labelbox"
					:halign "start"
					:valign "start"
					:orientation "v"
					(label
						:halign "center" 
						:text "${label}" 
						:class "label"
					)
					(label
						:halign "start" 
						:text "${active ? 'On' : 'Off'}" 
						:class "label__status"
					)
				)
			)
		)
	)
)

(defwidget controls []
	(box
		:class "controlsbox"
		:orientation "v"
		:space-evenly false
		:spacing 16
		(box
			:orientation "h"
			:space-evenly "false"
			:class "slider active"
			(box :class "label"	volume_icon)
			(scale
				:value volume_value
				:hexpand true
				:onchange "./scripts/volume.sh set {}"
				:min 0
				:max 101
			)
		)
		(box
			:orientation "h"
			:space-evenly "false"
			:class "slider active"
			(box :class "label"	br_icon)
			(scale
				:hexpand true
				:value br
				:onchange "brightnessctl set {}%"
				:min 0
				:max 100
			)
		)
	)
)

(defvar music-expand false)
(defwidget music []
	(revealer
		:reveal music-panel
		:transition "slidedown"
		(eventbox
			:onhover "${EWW_CMD} update music-expand=true"
			:onhoverlost "${EWW_CMD} update music-expand=false"
			:halign "center"
			:class "music-box"
			(box
				:class "song-cover"
				:orientation "v"
				:style "background-image: url('${music-cover}')"
				(box
					:class "song" 
					:orientation "v" 
					:space-evenly "false" 
					:hexpand "false" 
					:vexpand "false"
					(label
						:class "now-playing"
						:halign "start"
						:text {song-status}
						:limit-width 30
					)
					(label
						:class "song-title"
						:halign "start"
						:text {song-title}
						:limit-width 30
					)
					(label
						:class "song-artist"
						:halign "start"
						:text {song-artist}
						:limit-width 45
					)
					(box
						:class "music-bar"
						(scale
							:value {song-position}
							;;:onchange "scripts/music seek {}"
						)
			        )
					(revealer
						:reveal music-expand
						:transition "slideup"
						(eventbox
							(box
								:class "song-controls"
								:orientation "h"
								:halign "center"
								(button
									:class "music-controls ${play_shuffle == 'On' ? 'active' : ''}"
									:onclick "playerctl -p ${players} shuffle toggle" "列"
								)
								(button
									:class "music-controls"
									:onclick "playerctl -p ${players} previous" "玲"
								)
								(button
									:class "music-play"
									:onclick "playerctl -p ${players} play-pause" play-pause
								)
								(button
									:class "music-controls"
									:onclick "playerctl -p ${players} next" "怜"
								)
								(button
									:class "music-controls ${play_loop == 'Playlist' || play_loop == 'Track' ? 'active' : ''}"
									:onclick "playerctl -p ${players} loop playlist" 
									:onrightclick "playerctl -p ${players} loop none "
									:onmiddleclick "playerctl -p ${players} loop track" "ﯩ"
								)
							)
						)
					)
				)
			)
		)
	)
)

(defwidget control-panel []
	(box
		:class "actions"
		:orientation "v"
		:space-evenly false
		:spacing 10
	(header)
	;;(todo)
	(sysbuttons)
	(timer)
	(music)
	(controls)
	(footer)
	)
)

(defwindow controls-x11
	:geometry
		(geometry
			:x "-10"
			:y "33"
			:anchor "top right"
		)
	:monitor 0
	:windowtype "dialog"
	:wm-ignore true
	(control-panel)
)

(defwindow controls-wayland
	:geometry
		(geometry
			:x "1"
			:y "33"
			:anchor "top right"
		)
	:monitor 0
	:windowtype "dialog"
	:wm-ignore true
	(control-panel)
)

(defwidget closer []
    (eventbox
		:onclick "./scripts/controls.sh"
		:onrightclick "./scripts/controls.sh"
		;;:onscroll "./scripts/controls.sh"    
    )
)
  
(defwindow background-closer
	:monitor 0
	:geometry
		(geometry
			:width "100%" 
			:height "100%"
			:anchor "top right"
		)
	:stacking "bg"
	(closer)
)
