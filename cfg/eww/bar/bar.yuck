(defwidget bottom-left []
    (box 
		:orientation "h" 
		:space-evenly false
		:valign "center"
		:halign "start"
        (eventbox
            :onhover "${EWW_CMD} update top-panel-music=true"
            :onhoverlost "${EWW_CMD} update top-panel-music=false"
            :onscroll "playerctl volume 0.1+ {up}"
            :onclick "playerctl play-pause"
            :cursor "pointer"
            (box 
                :class "music-bar" 
                :orientation "h" 
                :space-evenly false
                (box 
                    ;:class "song-cover-bar" 
                    ;:style "background-image: url('${music-cover}');"
                )
                (button 
                    :class "song-bar" 
                    {title-artist}
                    ;; Replace 'music-scroll' with 'title-artist' if your facing performance drop (Replacing with title-artist will not wrap the text)
                )
                (revealer
                    :transition "slideright"
                    :reveal top-panel-music
                    :duration "250ms"
                    (box 
                        :valign "center"
                        :orientation "h" 
                        (button
                            :class "music-previous-bar"
                            :onclick "playerctl -p ${players} previous" "玲"
                        )             
                        (button
                            :class "music-play-bar"
                            :onclick "playerctl -p ${players} play-pause" play-pause
                        )
                        (button
                            :class "music-next-bar"
                            :onclick "playerctl -p ${players} next" "怜"
                        )
                    )
                )
            )
        )
    )
)

(defwidget bottom-center []
    (eventbox
        ;:cursor "pointer"
        :vexpand true 
        :halign "center"
        :valign "center"
		:onhover "eww update work_space_hover=true &"
		:onhoverlost "eww update work_space_hover=false &"
		:onscroll "[ {} = down ] && bspc desktop -f next; \
					[ {} = up ] && bspc desktop -f prev" 
        (literal
            :content workspaces
        )
    )
)


(defvar ws-icons '["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"]')

(defwidget workspace-hyprland []
  (eventbox
        :onscroll "echo {} | sed -e \"s/up/-1/g\" -e \"s/down/+1/g\" | xargs hyprctl dispatch workspace"
        (box
            :class "module workspace"
            :spacing 8
         (for i in workspaces
           (button
                    :onclick "hyprctl dispatch workspace ${i.number}"
                    :class "ws icon"
                    :style "color: ${i.color};"
                    (label :style "font-size: 15pt;" :text "${ws-icons[i.number - 1]}")))))
)



(defwidget lanuncher []
	(box 
		:class "controlbars"
		:orientation "h"
		:space-evenly false
		:spacing 15
		:valign "center"
		:halign "end"
		(eventbox
			(button
				:class "button"
				:onclick "~/.config/eww/scripts/apps settings"
				"ﴂ"
			)
		)
	)

)


(defwidget bottom-right []
	(box
		:class "controlbars"
		:orientation "h"
		:space-evenly false
		:spacing 15
		:valign "center"
		:halign "end"
		(box
			:orientation "h"
			:space-evenly "false"
			:class "slider active"
			(box :class "label"	volume_icon)
			(scale
				:value volume_value
				:hexpand true
				:onchange "~/.config/eww/scripts/volume.sh set {}"
				:min 0
				:max 101
			)
		)
		(box
			:orientation "h"
			:space-evenly "false"
			:class "slider active"
			(box :class "label"	br_icon)
			(scale
				:hexpand true
				:value br
				:onchange "brightnessctl set {}%"
				:min 0
				:max 100
			)
		)
	)
)

(defwidget top-left []
    (box
		:class "top-panel"
        :orientation "h"
        :space-evenly true
        :halign "end"
	)
)
(defwidget top-center []
  (box
		:class "top-panel"
        :orientation "h"
        :space-evenly true
        :halign "center"
		(label 
			:class "modules"
			:text "${network_speed}" 
        )
	)
)


(defwidget top-right []
    (box
        :orientation "h"
        :space-evenly false
        :halign "end"
        (eventbox
            :onclick "$HOME/.config/sweetconfigs-xorg/bin/widgets/control-panel &"
            :onhover "${EWW_CMD} update control-panel-hover=true"
            :onhoverlost "${EWW_CMD} update control-panel-hover=false"
            :cursor "pointer"
        )
    )
)




(defwidget top-panel []
    (box
        :orientation "h"
        :class "top-panel-window"
        (top-left)
        (top-center)
        (top-right)
    )
)

(defwidget bottom-panel []
    (box
        :orientation "h"
        :class "bottom-panel-window"
        :space-evenly true
        (bottom-left)
        (workspace-hyprland)
        (bottom-right)
    )
)

(defwindow minimal-bar
	:monitor 0
	:geometry (geometry :x "0px"
						:y "5px"
						:width "90%"
						:height "25px"
						:anchor "bottom center")
	:stacking "fg"
	:exclusive true

	(workspace-hyprland)
)


(defwindow bar1
	:monitor 0
	:geometry (geometry :x "0%"
						:y "0px"
						:width "100%"
						:height "25px"
						:anchor "top center")
	:stacking "fg"
	:exclusive true
	:reserve (struts :distance "23px" :side "top")
	:windowtype "dock"
	:wm-ignore false
	(top-panel)
)

(defwindow bar2
   :monitor 0
   :geometry (geometry :x "0%"
					   :y "0px"
					   :width "100%"
					   :height "24px"
					   :anchor "bottom center")
   :stacking "fg"
	:exclusive true
   :reserve (struts :distance "23px" :side "bottom")
   :windowtype "dock"
   :wm-ignore false
  (bottom-panel)
)

