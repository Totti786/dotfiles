(defwidget header []
  (box :class "datebox"
       :orientation "h"
       :space-evenly true
	(box :class "date-cover"
         :space-evenly false
         :orientation "h"
         :halign "center"
         :valign "center"
         :spacing 10
         :style "background-image: url('actions/wallpaper.jpg')"
		 (overlay 
		 (label :text "${time}" :class "time")
		 (label :text "${day} \\n${date} " :class "day" :valign "end" :halign "start")
		 ;(label :text "${date} \\n Heloo" :class "date" :valign "end" :halign "start")
		 )
    )

  )
)

(defwidget footer []
  (box :class "datebox"
       :orientation "h"
       :space-evenly true
    (box :class "useractions"
		 :space-evenly false
		 :orientation "h"
		 :halign "start"
		 :valign "center"
		 (label :class "button" :text "${battery-icon}")
    )   
    (box :class "useractions"
         :space-evenly false
         :orientation "h"
         :halign "end"
         :valign "start"
         :spacing 5
      (button :class "button" :onclick "~/.local/bin/redshift.sh toggle"
		"ﯧ"
      )
	  (button :class "button" :onclick "~/.config/eww/scripts/apps settings"
        "漣"
      )
      (button :class "button" :onclick "~/.config/eww/scripts/apps power"
        "⏻"
      )

    )
  )
)

(defvar control-panel true)
(defwidget sysbuttons []
  (revealer 
	:reveal control-panel
	:transition "slideup"
  (box :class "sysbuttonsbox"
       :orientation "v"
       :space-evenly true
       :spacing 8
    (box :class "firstrow"
         :orientation "h"
         :space-evenly true
         :spacing 8
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock 
	        :icon "${network_icon}"
	        :onclick "~/.config/eww/scripts/apps wifi"
	        :active "${network_status == 'Connected' ? true : false}"
	        :label "${network_ssid}"
        )
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${bluetooth_state == 'on' ? '' : ''}"
                  :onclick "~/.config/eww/scripts/bluetooth toggle"
                  :active "${bluetooth_state == 'on' ? true : false}"
                  :label "Bluetooth"
        )
      )
    )
    (box :class "secondrow"
         :orientation "h"
         :space-evenly true
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${record_status == 'on' ? '' : '逸'}"
                  :onclick "~/.config/openbox/pipemenus/record --toggle"
                  :active "${record_status == 'on' ? true : false}"
                  :label "Recorder"
        )
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${dnd_status == 'On' ? '󰍶' : '󱑙'}"
                  :label "Don't Disturb"
                  :onclick "~/.config/eww/scripts/dnd toggle"
                  :active "${dnd_status == 'On' ? true : false}"
        )
      )
    )
    (box :class "thirdrow"
         :orientation "h"
         :space-evenly true
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${record_status == 'on' ? '' : ''}"
                  :onclick "~/.config/eww/scripts/timer --toggle"
                  :active "${record_status == 'on' ? true : false}"
                  :label "Timer"
        )
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${vpn_status == 'On' ? '旅' : 'ﯳ'}"
                  :label "VPN"
                  :onclick "~/.config/eww/scripts/vpn.sh toggle"
                  :active "${vpn_status == 'On' ? true : false}"
        )
      )
    )
  )
  )
)

(defwidget sysblock [icon onclick active label]
  (box :class "block-container"
       :orientation "h"
       :space-evenly true
       :spacing 1
    (button :class "block ${active ? 'active' : ''}" :onclick "${onclick}"
		(box :orientation "h"
			 :spacing 1
			 :valign "start"
			 :space-evenly false
            (box :class "iconbox"
                 :halign "start"
                 :valign "center"
                 :space-evenly true
                 :orientation "h"
              (label :text "${icon}" :class "icon")
            )
            (box :class "labelbox"
                 :halign "start"
                 :valign "start"
                 :orientation "v"
              (label :halign "center" :text "${label}" :class "label")
              (label :halign "start" :text "${active ? 'On' : 'Off'}" :class "label__status")
            )
	        (box :class "chevronbox"
	             :halign "end"
	             :hexpand true
	             :valign "center"
	             :space-evenly false
	             :orientation "h"
	             (button :class "date" "")
	        )
		)
    )
  )
)

(defwidget controls []
  (box :class "controlsbox"
       :orientation "v"
       :space-evenly false
       :spacing 16
    (box :orientation "h"
         :space-evenly "false"
         :class "slider active"
      (box :class "label"
            volume_icon
      )
      (scale :value volume_value
             :hexpand true
             :onchange "~/.config/eww/scripts/volume.sh set {}"
             :min 0
             :max 101)
    )
    (box :orientation "h"
         :space-evenly "false"
         :class "slider active"
      (box :class "label"
            br_icon
      )
      (scale 
             :hexpand true
             :value br
             :onchange "brightnessctl set {}%"
             :min 0
             :max 101)
    )
  )
)

(defvar note false)
(defwidget note [] 
	
	(revealer 
		:reveal note
		:transition "slidedown"
		(box :class "controlsbox"
			 :orientation "v"
	         :space-evenly false
        )
    )
)

(defvar small-music false)
(defwidget small-music []
	(revealer 
		:reveal small-music 
		:transition "slideup"
		(box
			:orientation "h"
			:space-evenly true
			:halign "end"
			:class "music-small"
			(box
				:class "song-cover"
				:orientation "v"
				:style "background-image: url('${music-cover}')"
			
				(box 
					:class "song" 
					:orientation "v" 
					:space-evenly "false" 
					:hexpand "false" 
					:vexpand "false"
					(eventbox
						(box 
							:class "song-controls"
							:orientation "h"
							:halign "center"
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} loop track" 
								:onrightclick "playerctl -p ${players} loop playlist"
								:onmiddleclick "playerctl -p ${players} loop none" "ﯩ"
							)
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} previous" "玲"
							)
							(button
								:class "music-play"
								:onclick "playerctl -p ${players} play-pause" play-pause
							)
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} next" "怜"
							)
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} shuffle toggle" "列"
							)
						)
					)
				)
			)
		)
	)
)


(defwidget music []
	(revealer 
		:reveal music-panel
		:transition "slideup"
		(box
			:orientation "h"
			:space-evenly true
			:halign "center"
			:class "music-box"
			(box
				:class "song-cover"
				:orientation "v"
				:style "background-image: url('${music-cover}')"
			
				(box 
					:class "song" 
					:orientation "v" 
					:space-evenly "false" 
					:hexpand "false" 
					:vexpand "false"
					(label 
						:class "now-playing" 
						:halign "start" 
						:text {song-status}
						:limit-width 40
					)
					(label 
						:class "song-title" 
						:halign "start"			
						:text {song-title}
						:limit-width 30
					)
					(label 
						:class "song-artist" 
						:halign "start"			
						:text {song-artist}
						:limit-width 45
					)
					(label 
						:class "song-position" 
						:halign "start"			
						:text song-position
					)
					(eventbox
						(box 
							:class "song-controls"
							:orientation "h"
							:halign "center"
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} loop track" 
								:onrightclick "playerctl -p ${players} loop playlist"
								:onmiddleclick "playerctl -p ${players} loop none" "ﯩ"
							)
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} previous" "玲"
							)
							(button
								:class "music-play"
								:onclick "playerctl -p ${players} play-pause" play-pause
							)
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} next" "怜"
							)
							(button
								:class "music-controls"
								:onclick "playerctl -p ${players} shuffle toggle" "列"
							)
						)
					)
				)
			)
		)
	)
)

(defwidget actions []
  (box :class "actions"
       :orientation "v"
       :space-evenly false
       :spacing 10
    (header)
    (sysbuttons)
    (note)
    (music)
    (small-music)
    (controls)
    (footer)
  )
)

(defwindow actions
  :geometry (geometry :x "-10px"
                      :y "33px"
                      :anchor "top right"
            )
  :windowtype "dialog"
  :wm-ignore true
  (actions)
)
