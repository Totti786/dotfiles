#!/bin/bash

players="spotify,%any,firefox,chromium,brave,mpd"
player_status=$(playerctl -sp $players status)
artist=$(playerctl -sp $players metadata --format '{{ artist }}')
title=$(playerctl -sp $players metadata --format '{{ title }}')
albumart="$(playerctl -sp $players metadata mpris:artUrl | sed -e 's/open.spotify.com/i.scdn.co/g')"
cache="$HOME/.cache/eww/music"

[ ! -d $cache ] && mkdir $cache

status_icon(){
    if [ "$player_status" = "Playing" ]; then
	    echo ""
    elif [ "$player_status" = "Paused" ]; then
	    echo ""
    else
	    echo ""
    fi
}

status_shuffle(){
	echo "$(playerctl -p ${players} shuffle)"
}
status_loop(){
	echo "$(playerctl -p ${players} loop)"
}

status_value() {
	player_name=$(playerctl -p $players -l | head -n 1 | cut -d '.' -f1)

	[ "$player_status" = "Playing" ] && echo "Now Playing - via ${player_name^}" || echo "Music"
}

title() {
    [ -z "$title" ] && echo "Nothing Playing" || echo $title
}

artist() {
    if [ "$title" = "Advertisement" ]; then
		echo "Spotify Free"
	else
		if [ -z "$artist" ]; then
			echo "Unknown Artist";
		else
			echo "by $artist"
		fi
	fi
}

cover() {
    cover="$cache/cover.png"
    fallback="$HOME/.config/wpg/templates/wallpaper.jpg"

    [ $(playerctl -p $players metadata mpris:artUrl) ] && curl -s "$albumart" --output $cover || cp $fallback $cover 
    echo $cover
}

cover_notification() {
    cover_dir="$cache/notification-cover"
    [ ! -d $cover_dir ] && mkdir $cover_dir
    cover="$cover_dir/$RANDOM-cover.png"
    fallback="$HOME/.config/eww/assets/fallback.png"
    players_pass=$1
    
    if [[ $players_pass == "mpd" ]]; then
      albumart="$(playerctl -p mpd metadata mpris:artUrl)"
    elif [[ $players_pass == "rhythmbox" ]]; then
      albumart="$(playerctl -p rhythmbox metadata mpris:artUrl)"
    else
      albumart="$(playerctl -p $players_pass metadata mpris:artUrl | sed -e 's/open.spotify.com/i.scdn.co/g')"
    fi
    [ $(playerctl -p $players_pass metadata mpris:artUrl) ] && curl -s "$albumart" --output $cover || cp $fallback $cover
    echo $cover | tail -n 1
}

position() {
	if [[ $(playerctl -s position) ]]; then 
	    position=$(playerctl -p $players position) 
		duration=$(playerctl -p $players metadata mpris:length | sed 's/.\{6\}$//')
		echo "scale=10; $position * 100 / $duration" | bc
	else
		echo 0
	fi
}

# Seek to an specific time 
seek() {
   seekt="$1"    
   playerctl --player=$player position $seekt
}

case $1 in
    status)
        status_value
    ;;
    status-icon)
        status_icon
    ;;
    title)
        title
    ;;
    artist)
        artist
    ;;
    title-artist)
        echo $(title) - $(artist)
    ;;
    cover)
        cover
    ;;
    cover-notification)
       cover_notification $2
    ;;
    position)
        position
    ;;
    shuffle)
        status_shuffle
    ;;
    seek)
       seek $2
    ;;
    loop)
        status_loop
    ;;
esac
