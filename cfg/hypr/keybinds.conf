# █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# Binds, see https://wiki.hyprland.org/Configuring/Binds/ for more

# Window Managment
bind = Super, Q, killactive,
bind = Super, C, killactive,
bind = Super, Space, togglefloating,
bind = Super Shift, F, fullscreen,

bind = Super Shift, Space, pseudo, # dwindle
bind = Super Shift, up, togglesplit, # dwindle
bind = Super Shift, down, togglesplit, # dwindle

bind = Super Shift, K, togglesplit, # dwindle
bind = Super Shift, L, togglesplit, # dwindle

# Focus
bind = Super, left, movefocus, l
bind = Super, right, movefocus, r
bind = Super, up, movefocus, u
bind = Super, down, movefocus, d

bind = Super, J, movefocus, l
bind = Super, SemiColon, movefocus, r
bind = Super, K, movefocus, u
bind = Super, L, movefocus, d

# Move
bind = Super Shift, left, movewindow, l
bind = Super Shift, right, movewindow, r
bind = Super Shift, up, movewindow, u
bind = Super Shift, down, movewindow, d

bind = Super Shift, J, movewindow, l
bind = Super Shift, SemiColon, movewindow, r
bind = Super Shift, K, movewindow, u
bind = Super Shift, L, movewindow, d

# Resize
binde = Super Alt, left, resizeactive, -30 0
binde = Super Alt, right, resizeactive, 30 0
binde = Super Alt, up, resizeactive, 0 -30
binde = Super Alt, down, resizeactive, 0 30

binde = Super Alt, J, resizeactive, -30 0
binde = Super Alt, SemiColon, resizeactive, 30 0
binde = Super Alt, K, resizeactive, 0 -30
binde = Super Alt, L, resizeactive, 0 30

# Tabbed
bind = Super Shift, G, togglegroup
binde = Super Shift, tab, changegroupactive

# Special
bind = Super, D, togglespecialworkspace, special
bind = Super Shift, D, movetoworkspacesilent, special

# Switch
binde = Alt, Tab, cyclenext
bind = Alt, Tab, bringactivetotop,   # bring it to the top

# Switch workspaces with Super + [0-9]
bind = Super, 1, workspace, 1
bind = Super, 2, workspace, 2
bind = Super, 3, workspace, 3
bind = Super, 4, workspace, 4
bind = Super, 5, workspace, 5
bind = Super, 6, workspace, 6
bind = Super, 7, workspace, 7
bind = Super, 8, workspace, 8
bind = Super, 9, workspace, 9
bind = Super, 0, workspace, 10

# Switch workspaces with arrows or jkl;
binde = Super Ctrl, left, workspace, -1
binde = Super Ctrl, right, workspace, +1
binde = Super Ctrl, up, workspace, -1
binde = Super Ctrl, down, workspace, +1

binde = Super Ctrl, J, workspace, -1
binde = Super Ctrl, SemiColon, workspace, +1
binde = Super Ctrl, K, workspace, -1
binde = Super Ctrl, L, workspace, +1

# Move active window to a workspace with Super + Shift + [0-9] and don't switch workspace
bind = Super Shift, 1, movetoworkspacesilent, 1
bind = Super Shift, 2, movetoworkspacesilent, 2
bind = Super Shift, 3, movetoworkspacesilent, 3
bind = Super Shift, 4, movetoworkspacesilent, 4
bind = Super Shift, 5, movetoworkspacesilent, 5
bind = Super Shift, 6, movetoworkspacesilent, 6
bind = Super Shift, 7, movetoworkspacesilent, 7
bind = Super Shift, 8, movetoworkspacesilent, 8
bind = Super Shift, 9, movetoworkspacesilent, 9
bind = Super Shift, 0, movetoworkspacesilent, 10

# Move active window to a the adjacent workspace with Super + Shift + Ctrl + [Arrows] or [jkl;]
binde = Super Ctrl Shift, left, movetoworkspace, -1
binde = Super Ctrl Shift, right, movetoworkspace, +1
binde = Super Ctrl Shift, up, movetoworkspace, -1
binde = Super Ctrl Shift, down, movetoworkspace, +1

binde = Super Ctrl Shift, J, movetoworkspace, -1
binde = Super Ctrl Shift, SemiColon, movetoworkspace, +1
binde = Super Ctrl Shift, K, movetoworkspace, -1
binde = Super Ctrl Shift, L, movetoworkspace, +1

# Move active window to a workspace with Super + Shift + [0-9] 
bind = Super Ctrl, 1, movetoworkspace, 1
bind = Super Ctrl, 2, movetoworkspace, 2
bind = Super Ctrl, 3, movetoworkspace, 3
bind = Super Ctrl, 4, movetoworkspace, 4
bind = Super Ctrl, 5, movetoworkspace, 5
bind = Super Ctrl, 6, movetoworkspace, 6
bind = Super Ctrl, 7, movetoworkspace, 7
bind = Super Ctrl, 8, movetoworkspace, 8
bind = Super Ctrl, 9, movetoworkspace, 9
bind = Super Ctrl, 0, movetoworkspace, 10

# Mouse Bindings
# Move/resize windows with Super + LMB/RMB and dragging
bindm = Super, mouse:272, movewindow
bindm = Super, mouse:273, resizewindow

# Scroll through existing workspaces with Super + scroll
bind = Super, mouse_up, workspace, +1
bind = Super, mouse_down, workspace, -1

# Volume control
bindel = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_SINK@ 5%+
bindel = , XF86AudioLowerVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_SINK@ 5%-
bindl  = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_SINK@ toggle
bindl  = , XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle

# Brighness control
bindl = , XF86MonBrightnessUp, exec, brightnessctl set 5%+
bindl = , XF86MonBrightnessDown, exec, brightnessctl set 5%-

# Auto Brighness control
bindl = Super, XF86MonBrightnessUp, exec, clight.sh --capture
bindl = Super, XF86MonBrightnessDown, exec, clight.sh --toggle-pause

# Screenshots
bindl = , Print, exec, shot --now
bind  = Shift, Print, exec, shot --area
bind  = Alt, Print, exec, shot --text
bind  = Ctrl, Print, exec, shot --edit

# Media control
bindl = , XF86AudioMedia, exec, playerctl -a play-pause
bindl = , XF86AudioStop , exec, playerctl -a stop
bindl = , XF86AudioPlay , exec, playerctl play-pause
bindl = , XF86AudioPrev , exec, playerctl previous
bindl = , XF86AudioNext , exec, playerctl next

bindl = Super, XF86AudioRaiseVolume, exec, playerctl volume 0.05+
bindl = Super, XF86AudioLowerVolume, exec, playerctl volume 0.05-
bindl  = Super, XF86AudioMute, exec, playerctld shift

bindl = Ctrl Alt, P, exec, playerctl play-pause
bindl = Ctrl Alt, left, exec, playerctl previous
bindl = Ctrl Alt, right, exec, playerctl next
bindel = Ctrl Alt, up, exec, playerctl volume 0.05+
bindel = Ctrl Alt, down, exec, playerctl volume 0.05-
bindl = Ctrl Shift Alt, left, exec, playerctl position 10-
bindl = Ctrl Shift Alt, right, exec, playerctl position 10+

# Programs
bind = Alt, Return, togglespecialworkspace, drop
bind = Ctrl Shift, Return, exec,hyprspace
bind = Super Shift, Return, exec, terminal --float
bind = Super, Return, exec, terminal
bind = Super, escape, exec, hyprctl kill
bind = Super, T, exec, terminal --full
bind = Super, E, exec, thunar
bind = Super, W, exec, geany
bind = Super, F, exec, firefox
bind = Super, p, exec, color-picker
bind = Super, V, exec, copyq toggle
bind = Super, Z, exec, discord
bind = Super, O, exec, obs

bind = Super Shift, S, exec, gtk-launch spotify-adblock || gtk-launch spotify
bind = Super Shift, V, exec, [[ -z "$(pgrep pavucontrol)" ]] && pavucontrol
bind = Super Shift, V, togglespecialworkspace, pavu

bindl = Ctrl Alt, L, exec, loginctl lock-session
bind  = Ctrl Alt, W, exec, wpgtk --random

# Utils
bind = Super, Super_L, exec, pkill rofi || rofi-utils --launch
bind = Super, R, exec, pkill rofi || rofi-reader
bind = Super, A, exec, pkill rofi || rofi-media --anime
bind = Super, N, exec, pkill rofi || rofi-media --shows
bind = Super, M, exec, pkill rofi || rofi-media --movies
bind = Super, Y, exec, ytfzf -fD

bind = Super, S, exec, pkill rofi || rofi-utils --shot
bind = Super Shift, R, exec, pkill rofi || rofi-utils --record
bind = Super Shift, W, exec, wpgtk --pick
bind = Super Shift, M, exec, wpgtk --reload

bind = Super AlT, R, exec, recorder --screen
bind = Super AlT, S, exec, recorder --stop

# Ags
bind = Super, Tab, exec, agsv1 -t overview
bind = Super, Period, exec, agsv1 run-js 'cycleMode();'
bind = Super, X, exec, for ((i=0; i<$(xrandr --listmonitors | grep -c 'Monitor'); i++)); do agsv1 -t "session""$i"; done
bind = Super, Slash, exec, for ((i=0; i<$(xrandr --listmonitors | grep -c 'Monitor'); i++)); do agsv1 -t "cheatsheet""$i"; done
#bind = Super, M, exec, agsv1 run-js 'openMusicControls.value = (!mpris.getPlayer() ? false : !openMusicControls.value);'
bind = Super, Comma, exec, agsv1 run-js 'openColorScheme.value = true; Utils.timeout(3000, () => openColorScheme.value = false);'
#bind = Super, K, exec, for ((i=0; i<$(xrandr --listmonitors | grep -c 'Monitor'); i++)); do agsv1 -t "osk""$i"; done
bind = Control Shift, R, exec, pkill agsv1;agsv1

# trigger when the lid is closed
bindl = , switch:on:Lid Switch,exec, if [[ $(cat /sys/class/power_supply/BAT*/status) != "Discharging" ]] || [[ $(pgrep wayland-idle-in) ]]; then hyprctl dispatch dpms off ;else loginctl lock-session; sleep 0.5 && systemctl suspend ;fi
# trigger when the lid is opened
bindl = , switch:off:Lid Switch,exec,hyprctl dispatch dpms on ; clight.sh --capture

# trigger when the power button is pressed
bindl = , XF86PowerOff, exec, loginctl lock-session; sleep 0.4 && systemctl suspend
