# █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# Binds, see https://wiki.hyprland.org/Configuring/Binds/ for more

# Window Managment
bind = Super, Q, killactive,
bind = Super, C, killactive,
bind = Super, Space, togglefloating,
bind = Super SHIFT, F, fullscreen,
bind = Super SHIFT, Space, pseudo, # dwindle
bind = Super SHIFT, up, togglesplit, # dwindle
bind = Super SHIFT, down, togglesplit, # dwindle

# Focus
bind = Super, left, movefocus, l
bind = Super, right, movefocus, r
bind = Super, up, movefocus, u
bind = Super, down, movefocus, d

# Move
bind = Super SHIFT, left, movewindow, l
bind = Super SHIFT, right, movewindow, r
bind = Super SHIFT, up, movewindow, u
bind = Super SHIFT, down, movewindow, d

# Resize
binde = Super ALT, left, resizeactive, -30 0
binde = Super ALT, right, resizeactive, 30 0
binde = Super ALT, up, resizeactive, 0 -30
binde = Super ALT, down, resizeactive, 0 30

# Tabbed
bind = Super SHIFT, G, togglegroup
bind = Super SHIFT, tab, changegroupactive

# Special
bind = Super, D, togglespecialworkspace 
bind = Super SHIFT, D, movetoworkspacesilent, special

# Switch
bind = Alt, Tab, cyclenext
bind = Alt, Tab, bringactivetotop,   # bring it to the top

# Switch workspaces with Super + [0-9]
bind = Super, 1, workspace, 1
bind = Super, 2, workspace, 2
bind = Super, 3, workspace, 3
bind = Super, 4, workspace, 4
bind = Super, 5, workspace, 5
bind = Super, 6, workspace, 6
bind = Super, 7, workspace, 7
bind = Super, 8, workspace, 8
bind = Super, 9, workspace, 9
bind = Super, 0, workspace, 10

# Switch workspaces with arrows
binde = Super CTRL, up, workspace, -1
binde = Super CTRL, down, workspace, +1
binde = Super CTRL, right, workspace, +1
binde = Super CTRL, left, workspace, -1

# Move active window to a workspace with Super + SHIFT + [0-9] and don't switch workspace
bind = Super SHIFT, 1, movetoworkspacesilent, 1
bind = Super SHIFT, 2, movetoworkspacesilent, 2
bind = Super SHIFT, 3, movetoworkspacesilent, 3
bind = Super SHIFT, 4, movetoworkspacesilent, 4
bind = Super SHIFT, 5, movetoworkspacesilent, 5
bind = Super SHIFT, 6, movetoworkspacesilent, 6
bind = Super SHIFT, 7, movetoworkspacesilent, 7
bind = Super SHIFT, 8, movetoworkspacesilent, 8
bind = Super SHIFT, 9, movetoworkspacesilent, 9
bind = Super SHIFT, 0, movetoworkspacesilent, 10

# Move active window to a workspace with Super + SHIFT + [0-9] 
bind = Super CTRL, 1, movetoworkspace, 1
bind = Super CTRL, 2, movetoworkspace, 2
bind = Super CTRL, 3, movetoworkspace, 3
bind = Super CTRL, 4, movetoworkspace, 4
bind = Super CTRL, 5, movetoworkspace, 5
bind = Super CTRL, 6, movetoworkspace, 6
bind = Super CTRL, 7, movetoworkspace, 7
bind = Super CTRL, 8, movetoworkspace, 8
bind = Super CTRL, 9, movetoworkspace, 9
bind = Super CTRL, 0, movetoworkspace, 10

# Mouse Bindings
# Move/resize windows with Super + LMB/RMB and dragging
bindm = Super, mouse:272, movewindow
bindm = Super, mouse:273, resizewindow

# Scroll through existing workspaces with Super + scroll
bind = Super, mouse_down, workspace, -1
bind = Super, mouse_up, workspace, +1

# Volume control
bindel = , XF86AudioRaiseVolume, exec, volume --inc
bindel = , XF86AudioLowerVolume, exec, volume --dec
bindl = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_SINK@ toggle
bindl = , XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle

# Brighness control
bindle = , XF86MonBrightnessUp, exec, ags run-js 'brightness.screen_value += 0.05; indicator.popup(1);'
bindle = , XF86MonBrightnessDown, exec, ags run-js 'brightness.screen_value -= 0.05; indicator.popup(1);'

# Screenshots
bind = , Print, exec, screenshot --now
bind = SHIFT, Print, exec, screenshot --area
bind = ALT, Print, exec, screenshot --extract

# Media control
bindl = , XF86AudioMedia, exec, playerctl -a play-pause
bindl = , XF86AudioStop, exec, playerctl -a stop
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = , XF86AudioNext, exec, playerctl next

# Programs
bind = Super, RETURN, exec, terminal
bind = Alt, RETURN, togglespecialworkspace, scratchpad
bind = Super SHIFT, RETURN, exec, terminal --float
bind = Super, escape, exec, hyprctl kill
bind = Super, T, exec, terminal --full
bind = Super, P, exec, color-picker
bind = Super, E, exec, thunar
bind = Super, W, exec, geany
bind = Super, F, exec, firefox
bind = Super, Z, exec, discord
bind = Super, G, exec, zathura
bind = Super, O, exec, obs
bind = Super, V, exec, copyq toggle

bind = Super SHIFT, R, exec, rhythmbox
bind = Super SHIFT, S, exec,gtk-launch spotify-adblock || gtk-launch spotify

bind = CTRL ALT, L, exec, loginctl lock-session
bind = CTRL ALT, W, exec, wpgtk random

# Utils
bind = Super, R, exec, pkill rofi || rofi-zathura 
bind = Super, L, exec, pkill rofi || lobster
bind = Super Shift, L, exec, lobster -c
bind = Super, J, exec, pkill rofi || jerry
bind = Super, Y, exec, pkill rofi || ytfzf -fD

bind = Super, S, exec, pkill rofi || rofi-utils --screenshot
bind = Super SHIFT, W, exec, wpgtk pick
bind = Super SHIFT, M, exec, wpgtk partial

bind = Super AlT, R, exec, ffmpeg-recorder --screen 

# Ags 
bindr = Control+SHIFT, R, exec, hyprctl reload; killall ags; ags &
bind = Super, X, exec, ags -t session
bind = Super, Super_L, exec, ags -t overview
bind = Super, Tab, exec, ags -t 'overview'
bind = Super, Slash, exec, for ((i=0; i<$(xrandr --listmonitors | grep -c 'Monitor'); i++)); do ags -t "cheatsheet""$i"; done
bind = Super, Period, exec, ags run-js 'cycleMode();'
bind = Super, M, exec, ags run-js 'openMusicControls.value = (!mpris.getPlayer() ? false : !openMusicControls.value);'
bind = Super, Comma, exec, ags run-js 'openColorScheme.value = true; Utils.timeout(3000, () => openColorScheme.value = false);'
bind = Super, K, exec, for ((i=0; i<$(xrandr --listmonitors | grep -c 'Monitor'); i++)); do ags -t "osk""$i"; done
bindl = , XF86AudioMute, exec, ags run-js 'indicator.popup(1);'

# trigger when the switch is toggled
#bindl=,switch:Lid Switch,exec,lockscreen
# trigger when the switch is turning on
bindl = ,switch:on:Lid Switch,exec, if [[ "$(acpi)"  =~ "Discharging" ]]; then systemctl suspend ;else hyprctl dispatch dpms off ;fi
#bindl = ,switch:on:Lid Switch,exec, hyprctl dispatch dpms on
# trigger when the switch is turning off
bindl = ,switch:off:Lid Switch,exec,hyprctl dispatch dpms on

bind  = ,XF86PowerOff, exec, systemctl suspend
