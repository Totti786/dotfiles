#!/bin/bash

# Color files
alacritty="$HOME/.config/alacritty/colors.yml"
polybar="$HOME/.config/polybar/colors.ini"
rofi="$HOME/.config/rofi/themes/colors.rasi"
discord="$HOME/.config/BetterDiscord/data/stable/custom.css"
dunst="$HOME/.config/dunst/dunstrc"
geany="$HOME/.config/geany/colorschemes/Pywal.conf"
zathura="$HOME/.config/zathura/zathurarc"
gzathura="$HOME/.config/zathura/genzathurarc"
systray="$HOME/.config/stalonetrayrc"
cava="$HOME/.config/cava/config"
copyq="$HOME/.config/copyq/copyq.conf"
jgmenu="$HOME/.config/jgmenu/jgmenurc"
eww="$HOME/.config/eww/colors.scss"
waybar="$HOME/.config/waybar/colors.css"
hypr="$HOME/.config/hypr/colors.conf"
conky1="$HOME/.config/conky/conky-Openbox.conf"
conky2="$HOME/.config/conky/conky-bspwm.conf"
Wallpapers="$HOME/Pictures/Wallpapers"

## Change colors
change_colors() {
	run &&
	# rofi
	cat > $rofi <<- EOF
	/* colors */
	* {
		background:       ${BG}90; 
		background-alt:   ${BG};
		foreground:       ${FG};
		selected:         ${bright_red};
		highlight:        ${bright_yellow};
		urgent:           ${bright_blue};
		on:               ${bright_magenta};
		off:              ${bright_black};
	}
		EOF
	
	# alacritty 
	cat > $alacritty <<- EOF 
	#Colors 
	colors:
	  primary:
	    background: '$BG'
	    foreground: '$FG'
	  cursor:
	    text:       '$black'
	    cursor:     '$white'
	  normal:
	    black:      '$black'
	    red:        '$red'
	    green:      '$green'
	    yellow:     '$yellow'
	    blue:       '$blue'
	    magenta:    '$magenta'
	    cyan:       '$cyan'
	    white:      '$white'
	  bright:
	    black:      '$bright_black'
	    red:        '$bright_red'
	    green:      '$bright_green'
	    yellow:     '$bright_yellow'
	    blue:       '$bright_blue'
	    magenta:    '$bright_magenta'
	    cyan:       '$bright_cyan'
	    white:      '$bright_white'
	EOF
	
	# geany
	sed -i -e "s/bg=.*/bg=${BG}/g" 									$geany
	sed -i -e "s/fg=.*/fg=${FG}/g" 									$geany
	sed -i -e "s/tag_yellow=.*/tag_yellow=${bright_cyan}/g" 			$geany
	sed -i -e "s/fold_bg_grey=.*/fold_bg_grey=${BG}/g" 		$geany
	sed -i -e "s/keyword_orange=.*/keyword_orange=${bright_magenta}/g" $geany
	sed -i -e "s/string_green=.*/string_green=${bright_green}/g" 		$geany
	sed -i -e "s/margin_bg_grey=.*/margin_bg_grey=${black}/g"			$geany
	sed -i -e "s/margin_fg_grey=.*/margin_fg_grey=${black}/g"			$geany
	sed -i -e "s/error_red=.*/error_red=${bright_magenta}/g" 			$geany
	sed -i -e "s/selection_blue=.*/selection_blue=${white}/g"			$geany
	
	# copyq 
	sed -i -e "s/bg=#.*/bg=${BG}/g" 				$copyq
	sed -i -e "s/alt_bg=#.*/alt_bg=$bright_black/g" $copyq
	sed -i -e "s/fg=#.*/fg=${FG}/g" 				$copyq
	sed -i -e "s/sel_bg=#.*/sel_bg=$cyan/g" 		$copyq
	sed -i -e "s/sel_fg=#.*/sel_fg${FG}/g" 			$copyq
	
	# dunst
	sed -i -e "s/background = \"#.*\"/background = \"${BG}80\"/g" 	  $dunst
	sed -i -e "s/foreground = \"#.*\"/foreground = \"${FG}\"/g"  	  $dunst
	sed -i -e "s/highlight = \"#.*\"/highlight = \"${FG}\"/g" 		  $dunst
	sed -i -e "s/frame_color = \"#.*\"/frame_color = \"${yellow}\"/g" $dunst

	# stalonetray 
	sed -i -e "s/background \"#.*\"/background \"$BG\"/g" $systray
	
	# jgmenu 
	sed -i -e "s/color_menu_bg        = .*/color_menu_bg        = ${BG} 60/g" 			$jgmenu
	sed -i -e "s/color_norm_fg        = .*/color_norm_fg        = ${FG} 100/g" 	 		$jgmenu
	sed -i -e "s/color_sel_bg         = .*/color_sel_bg         = ${bright_black} 60/g" $jgmenu
	sed -i -e "s/color_sel_fg         = .*/color_sel_fg         = ${bright_red} 100/g"  $jgmenu
	sed -i -e "s/color_sep_fg         = .*/color_sep_fg         = ${bright_blue} 40/g"  $jgmenu
	
	# zathura
	$gzathura > $zathura
	
	# discord
	if [[ -f $discord ]]; then 
	sed -i -e "s/--accent-color: .*/--accent-color: ${FG};/g" 										 $discord
	sed -i -e "s/--settings-icon-color: #.*/--settings-icon-color: ${FG};/g" 						 $discord
	sed -i -e "s/--background-1: .*/--background-1: ${bg_light};/g" 								 $discord
	sed -i -e "s/--background-2: .*/--background-2: ${BG};/g" 										 $discord
	sed -i -e "s/--border-color: .*/--border-color: $bright_black;/g" 								 $discord
	sed -i -e "s/--background-modifier-hover: .*/--background-modifier-hover: ${bright_magenta};/g"  $discord
	sed -i -e "s/--background-accent: .*/--background-accent: ${BG};/g" 							 $discord
	sed -i -e "s/--button-destructive: .*/--button-destructive: ${bright_yellow};/g" 				 $discord
	sed -i -e "s/--button-background-hover: .*/--button-background-hover: ${bright_red};/g" 		 $discord
	sed -i -e "s/--tab-selected: .*/--tab-selected: ${bright_blue};/g"								 $discord
	sed -i -e "s/--text-muted: .*/--text-muted: ${FG};/g" 											 $discord
	fi 
	
	# spotify
	# Spotify can be themed using the xrdb backend i.e. ${xrdb:color0:#222}
	
	# conky
	sed -i -e "s/own_window_colour = '#.*',/own_window_colour = '${BG}',/g" $conky1 $conky2
	sed -i -e "s/color0 = '#.*',/color0 = '${bright_red}',/g" 				$conky1 $conky2
	sed -i -e "s/color1 = '#.*',/color1 = '${FG}',/g" 						$conky1 $conky2
	sed -i -e "s/color2 = '#.*',/color2 = '${bright_blue}',/g"				$conky1 $conky2
	sed -i -e "s/color3 = '#.*',/color3 = '${bright_yellow}',/g"			$conky1 $conky2
	
	
	# cava 
	sed -i -e "s/gradient_color_1 = '.*'/gradient_color_1 = '${bright_red}'/g" 	    $cava
	sed -i -e "s/gradient_color_2 = '.*'/gradient_color_2 = '${bright_green}'/g"    $cava
	sed -i -e "s/gradient_color_3 = '.*'/gradient_color_3 = '${bright_blue}'/g" 	$cava
	sed -i -e "s/gradient_color_4 = '.*'/gradient_color_4 = '${bright_yellow}'/g"	$cava
	sed -i -e "s/gradient_color_5 = '.*'/gradient_color_5 = '${bright_magenta}'/g"	$cava
	sed -i -e "s/gradient_color_6 = '.*'/gradient_color_6 = '${bright_cyan}'/g"	  	$cava
	
	# eww
	sed -i -e "s/\$background: #.*/\$background: ${BG};/g"	   $eww
	sed -i -e "s/\$bg-alt: #.*/\$bg-alt: ${bg_light};/g" 	   $eww
	sed -i -e "s/\$fg: #.*/\$fg: ${FG};/g" 					   $eww
	sed -i -e "s/\$fg-alt: #.*/\$fg-alt: $white;/g"			   $eww
	sed -i -e "s/\$red: #.*/\$red: $bright_red;/g" 			   $eww
	sed -i -e "s/\$green: #.*/\$green: $bright_green;/g"	   $eww
	sed -i -e "s/\$yellow: #.*/\$yellow: $bright_yellow;/g"    $eww
	sed -i -e "s/\$blue: #.*/\$blue: $bright_blue;/g" 		   $eww
	sed -i -e "s/\$purple: #.*/\$purple: $bright_magenta;/g"   $eww
	sed -i -e "s/\$cyan: #.*/\$cyan: $bright_cyan;/g" 		   $eww
	sed -i -e "s/\$gray: #.*/\$gray: $bright_black;/g" 		   $eww
	sed -i -e "s/\$gray-alt: #.*/\$gray-alt: $bright_black;/g" $eww
	
	# waybar
	cat > $waybar <<- EOF
	/*
	* Pywal Generated Palette
	*/
	
	@define-color foreground ${FG};
	@define-color background rgba(${bg_rgb},0.2);
	@define-color surface3 #394161;
	@define-color red $bright_red;
	@define-color green $bright_green;
	@define-color yellow $bright_yellow;
	@define-color blue $bright_blue;
	@define-color purple $bright_magenta;
	@define-color cyan $bright_cyan;

	EOF
	
	# hypr
	cat > $hypr <<- EOF 
		\$black		= ${bright_black:1}ff
		\$red 		= ${bright_red:1}ff
		\$green		= ${bright_green:1}ff
		\$yellow 	= ${bright_yellow:1}ff
		\$blue 		= ${bright_blue:1}ff
		\$magenta 	= ${bright_magenta:1}ff
		\$cyan 		= ${bright_cyan:1}ff
		\$white 	= ${bright_white:1}ff
		EOF

	# resize and move wallpaper for use by other programs
	#convert -resize 1920x1080! $wallpaper ~/.config/wpg/templates/wallpaper.jpg
	cp $wallpaper ~/.config/wpg/templates/wallpaper.jpg
	ln -s $wallpaper ~/.config/wpg/wallpapers &> /dev/null
	#convert -resize 1920x1080 -blur 0x8 $wallpaper ~/.config/wpg/templates/wallpaper-blur.jpg
}

# this functions should only be used if you have a system with a seperate home partition 
# (this is bad)
lockPerms(){
	## give the user read and write permissions to the grub themes directory
	#if [[ -d "/usr/share/grub/themes/Arch" ]]; then
		#sudo chgrp -R $(whoami) /usr/share/grub/themes/
		#sudo chmod -R ug+rwX  /usr/share/grub/themes/
	#else 
		#echo "Can't find a compatible grub theme"
	#fi
	## give the user read and write permissions to the sddm directory
	if [[ -d "/usr/share/sddm/themes/Arch" ]]; then
		sudo chgrp -R $(whoami) /usr/share/sddm/
		sudo chmod -R ug+rwX  /usr/share/sddm/
	else 
		echo "Can't find a compatible sddm theme"
	fi
	}

# this funcction only works after using the lockPermissions function
copyWal(){
	# copy background to grub theme
	#if [[ -d "/usr/share/grub/themes/Arch" ]]; then
		#cp ~/.config/wpg/templates/wallpaper.jpg \
		#/usr/share/grub/themes/Arch/background.jpg
	#else 
		#echo "Can't find a compatible grub theme"
	#fi
	# copy background to sddm theme
	if [[ -d "/usr/share/sddm/themes/Arch" ]]; then
		cp ~/.config/wpg/templates/wallpaper.jpg \
		/usr/share/sddm/themes/Arch/components/artwork/background.jpg
	else 
		echo "Can't find a compatible sddm theme"
	fi
	}

## Kill already running process
restart(){
	if [[ $(pidof $1) ]]; then
		pkill $1 &&
		$1 $2 $3 & disown
		#echo "$1 restarted"
	else 
		$1 $2 $3 & disown
		#echo "$1 is running"
	fi
	}
	
## Check if the command exists and then runs it
check(){
	if command -v $1 &> /dev/null; then 
		$1 $2 $3 &
	fi
	}
	
# change the wpg config file so this script can run whenever wpg is invoked 
wpgConfig(){
	sed -i -e 's/execute_cmd = false/execute_cmd = true/g' ~/.config/wpg/wpg.conf
	sed -i -e 's/reload = .*/reload = true/g' ~/.config/wpg/wpg.conf
	sed -i -e 's/auto_adjust = false/auto_adjust = true/g' ~/.config/wpg/wpg.conf
	sed -i -e "s/command = .*/command = \/home\/$(whoami)\/.local\/bin\/wpgtk main/g" ~/.config/wpg/wpg.conf
	}	

wall(){
	if [ -z "$1" ]; then
	echo "No image was selected"
	else 
	if [[ $XDG_SESSION_TYPE == "wayland" ]]; then 
		~/.config/hypr/scripts/wall $1
	else 
		feh --no-fehbg --bg-fill $1
	fi
	wpg -A "$1" && wpg -s "$1" 
	rm "$1""_wal_sample.png"
	fi
	}
	
random(){
	cd $Wallpapers/Wallpapers.git/ &&
	image=$(find -type f -not -path "./.git/*" | shuf -n 1)
	wall $Wallpapers/Wallpapers.git/${image:2}
	}

# this function uses implements a sxiv to create a wallpaper selector for wpg 
# to set a wallpaper you should select a wallpaper by pressing "m" and then quitting sxiv
pick(){
	wal=$(sxiv -torb $Wallpapers)
	wall $wal
	}	
	
gui(){
	if [[ $XDG_SESSION_TYPE == "wayland" ]]; then 
		~/.config/waybar/launch_waybar
		gsettings set org.gnome.desktop.interface icon-theme 'Papirus1'
		gsettings set org.gnome.desktop.interface icon-theme 'Papirus'
		gsettings set org.gnome.desktop.interface gtk-theme 'FlatColor1'
		gsettings set org.gnome.desktop.interface gtk-theme 'FlatColor'
	else 
		[[ `wmctrl -m | grep -i name | cut -d ' ' -f2` == "bspwm" ]] && sh ~/.config/bspwm/bsp-border &
		sh conky.sh restart
	fi
	}
	
main(){
	change_colors
	gui
	restart dunst
	restart copyq --start-server
	copyWal
		papirus-folder.sh --color ${red:1} &
	check spicetify -q update &
	check razer-cli -a & exit
}

## Create a lighter shade of the color using bash (courtesy of @guillaumeboehm)
create_colors() {
  colors=(0)
  for i in "${colors[@]}"; do
    color="color${i}"
    c_rgb_12d="$(( 0x"${!color:1:2}" ))"
    c_rgb_34d="$(( 0x"${!color:3:2}" ))"
    c_rgb_56d="$(( 0x"${!color:5:2}" ))"
    c_rgb_12d_60l="$(( c_rgb_12d + "$((c_rgb_12d * 3 / 5))" ))"
    c_rgb_34d_60l="$(( c_rgb_34d + "$((c_rgb_34d * 3 / 5))" ))"
    c_rgb_56d_60l="$(( c_rgb_56d + "$((c_rgb_56d * 3 / 5))" ))"
    [[ "${c_rgb_12d_60l}" -ge 255 ]] && c_rgb_12d_60l=255
    [[ "${c_rgb_34d_60l}" -ge 255 ]] && c_rgb_34d_60l=255
    [[ "${c_rgb_56d_60l}" -ge 255 ]] && c_rgb_56d_60l=255
    printf -v c_hex_12d_60l '%x' "$c_rgb_12d_60l"
    printf -v c_hex_34d_60l '%x' "$c_rgb_34d_60l"
    printf -v c_hex_56d_60l '%x' "$c_rgb_56d_60l"
    [[ "${#c_hex_12d_60l}" -eq 1 ]] && c_hex_12d_60l="0${c_hex_12d_60l}"
    [[ "${#c_hex_34d_60l}" -eq 1 ]] && c_hex_34d_60l="0${c_hex_34d_60l}"
    [[ "${#c_hex_56d_60l}" -eq 1 ]] && c_hex_56d_60l="0${c_hex_56d_60l}"
    c_hex_60l="#${c_hex_12d_60l}${c_hex_34d_60l}${c_hex_56d_60l}"
    declare -g color"${i}"_lighter_60="$c_hex_60l"
    c_rgb_12d_50d="$(( c_rgb_12d - "$((c_rgb_12d / 2))" ))"
    c_rgb_34d_50d="$(( c_rgb_34d - "$((c_rgb_34d / 2))" ))"
    c_rgb_56d_50d="$(( c_rgb_56d - "$((c_rgb_56d / 2))" ))"
    printf -v c_hex_12d_50d '%x' "$c_rgb_12d_50d"
    printf -v c_hex_34d_50d '%x' "$c_rgb_34d_50d"
    printf -v c_hex_56d_50d '%x' "$c_rgb_56d_50d"
    [[ "${#c_hex_12d_50d}" -eq 1 ]] && c_hex_12d_50d="0${c_hex_12d_50d}"
    [[ "${#c_hex_34d_50d}" -eq 1 ]] && c_hex_34d_50d="0${c_hex_34d_50d}"
    [[ "${#c_hex_56d_50d}" -eq 1 ]] && c_hex_56d_50d="0${c_hex_56d_50d}"
    c_hex_50d="#${c_hex_12d_50d}${c_hex_34d_50d}${c_hex_56d_50d}"
    declare -g color"${i}"_darker_50="$c_hex_50d"
  done
}

## Check if wpg is installed and get colors
run(){
	if [[ -f "/usr/bin/wpg" ]]; then
		## check if the files exists and import colors from wpg
		if [[ -f "$HOME/.cache/wal/colors.sh" ]]; then
			source "$HOME/.cache/wal/colors.sh"
			# Normal colors
			BG=`printf "%s\n" "$background"`
			FG=`printf "%s\n" "$foreground"`
			FGA=`printf "%s\n" "$foreground"`
			black=`printf "%s\n" "$color0"`
			red=`printf "%s\n" "$color1"`
			green=`printf "%s\n" "$color2"`
			yellow=`printf "%s\n" "$color3"`
			blue=`printf "%s\n" "$color4"`
			magenta=`printf "%s\n" "$color5"`
			cyan=`printf "%s\n" "$color6"`
			white=`printf "%s\n" "$color7"`
			# Bright colors
			bright_black=`printf "%s\n" "$color8"`
			bright_red=`printf "%s\n" "$color9"`
			bright_green=`printf "%s\n" "$color10"`
			bright_yellow=`printf "%s\n" "$color11"`
			bright_blue=`printf "%s\n" "$color12"`
			bright_magenta=`printf "%s\n" "$color13"`
			bright_cyan=`printf "%s\n" "$color14"`
			bright_white=`printf "%s\n" "$color15"`
			# Additional colors
			create_colors
			bg_light=`printf "%s\n" "$color0_lighter_60"`
			bg_dark=`printf "%s\n" "$color0_darker_50"`
			bg_rgb="$((0x${background:1:2})),$((0x${background:3:2})),$((0x${background:5:2}))"
			## merging the Xresources files with the main one
			xrdb -merge ~/.cache/wal/colors.Xresources		
		fi 
	else
		echo "[!] 'wpgtk' is not installed."
		echo "Installing from the AUR..." 
		yay -S wpgtk-git
		wpgConfig
		# this command installs rofi, gtk, and openbox themes
		wpg-install.sh -r -g -o
	fi
}

"$@"
